#!/bin/sh
clean() {
  for d in */ ; do
    if [ "$d" = "lib/" ]; then
      continue
    fi
    find "$d" ! -name 'PKGBUILD' -type f -exec rm -f {} +
    find "$d" ! -name "$(echo "$d" | sed 's:/*$::')" -type d -exec rm -rf {} +
    rm -rf "$d$d"
  done
}

install_all() {
  for d in */ ; do
    if [ "$d" = "lib/" ]; then
      continue
    fi
    cd "$d" || exit 1
    makepkg -si
    cd ..
  done
}

build_all() {
  for d in */ ; do
    if [ "$d" = "lib/" ]; then
      continue
    fi
    cd "$d" || exit 1
    makepkg -f
    cd ..
  done
}

install() {
  cd "$1" || exit 1
  makepkg -si
  cd ..
}

build() {
  cd "$1" || exit 1
  makepkg -f
  cd ..
}

help() {
  echo "Usage: ${0} command [package]"
  echo
  echo "The valid commands are:"
  echo "- install [package]: Builds and installs a package from a directory's PKGBUILD."
  echo "- build [package]: Builds a package from a directory's PKGBUILD."
  echo "- clean: Cleans all downloaded and generated files."
  echo "- install_all: Builds and installs every package."
  echo "- build_all: Builds every package."
  echo
}


if [ "$1" = "clean" ]; then
  clean
  exit 0
fi

if [ "$1" = "install_all" ]; then
  install_all
  exit 0
fi

if [ "$1" = "build_all" ]; then
  build_all
  exit 0
fi

if [ "$1" = "install" ]; then
  install "$2"
  exit 0
fi

if [ "$1" = "build" ]; then
  build "$2"
  exit 0
fi

if [ "$1" = "help" ]; then
  help
  exit 0
fi


echo "${0}: missing command."
echo "Try '${0} help' for more information."
exit 1